{
    "patches": [
        {
            "label": "2025-10-26_11-19-28",
            "content": "@@ -3,1063 +3,44 @@\n ass \n-Pessoa:%0A    def __init__(self, nome: str):%0A        self.nome = None%0A%0A    def __str__(self):%0A        return self.nome%0A%0Aclass Moto:%0A    def __init__(self):%0A        self.pessoa: Pessoa %7C None = None%0A%0A    def inserir(self, pessoa: Pessoa):%0A        if self.pessoa != None:%0A            print('fail: busy motorcycle')%0A            return%0A        self.pessoa = Pessoa%0A%0A    def remover(self):%0A        aux = self.pessoa%0A        self.pessoa = None%0A        return aux%0A%0A    def __str__(self):%0A        return str(self.pessoa)%0A%0Adef main():%0A    moto = Moto()%0A    line = input()%0A    print('$' + line)%0A    args = line.split(' ')%0A%0A    while True:%0A        if args%5B0%5D == 'end':%0A            break%0A        elif args%5B0%5D == 'show':%0A            print(moto)%0A        elif args%5B0%5D == 'enter':%0A            pessoa = Pessoa(args%5B1%5D)%0A            moto.inserir()%0A        elif args%5B0%5D == 'leave':%0A            pessoa = moto.remover()%0A            if pessoa ==  None:%0A                print('empty')%0A            else:%0A                print(f'%7Bpessoa%7D')%0A        else:%0A            print('error')%0Amain()\n+Motoca:%0A    def __init__(self):%0A        \n",
            "lines": "3"
        },
        {
            "label": "2025-10-26_11-58-19",
            "content": "@@ -39,20 +39,8 @@\n ome:\n- str, idade:\n  str\n@@ -59,157 +59,18 @@\n elf.\n-__\n nome = \n-nome%0A        self.__idade = idade%0A%0A    def getNome(self):%0A        return self.__nome%0A    %0A    def getIdade(self):%0A        return self.__idad\n+Non\n e%0A%0A \n@@ -110,39 +110,17 @@\n urn \n-f'%7B\n self.\n-__\n nome\n-%7D:%7Bself.__idade%7D'\n %0A%0Acl\n@@ -154,27 +154,8 @@\n self\n-, potencia: int = 1\n ):%0A \n@@ -162,26 +162,24 @@\n        self.\n-__\n pessoa: Pess\n@@ -198,67 +198,8 @@\n None\n-%0A        self.__potencia = potencia%0A        self.__time = 0\n %0A%0A  \n@@ -394,759 +394,71 @@\n     \n-if self.__pessoa == None:%0A            print('fail: empty motorcycle')%0A            return%0A        aux = self.pessoa%0A        self.pessoa = None%0A        return aux%0A%0A    def buyTime(tself, time: int):%0A        self.__time += time%0A        %0A    def dirigir(self, time: int):%0A        if self.__time == 0:%0A            print('fail: buy time first')%0A            return%0A        if self.__pessoa == None:%0A            print('fail: empty motorcycle')%0A            return%0A        if self.__pessoa.getAge() %3E 10:%0A            print('fail: too old to drive')%0A            return%0A        if time %3E self.__time:%0A            print(f'fail: time finished after %7Bself.__time%7D minutes')%0A        self.__time -= time%0A%0A    def honk(self):%0A        print(f'P%7B'e' * self.__potencia%7Dm')\n+aux = self.pessoa%0A        self.pessoa = None%0A        return aux\n %0A%0A  \n",
            "lines": "48"
        },
        {
            "label": "2025-10-26_12-40-37",
            "content": "@@ -587,34 +587,32 @@\n rn%0A        self.\n-__\n pessoa = Pessoa%0A\n@@ -763,34 +763,32 @@\n oa%0A        self.\n-__\n pessoa = None%0A  \n@@ -821,16 +821,17 @@\n buyTime(\n+t\n self, ti\n@@ -1400,132 +1400,8 @@\n ')%0A%0A\n-    def init(self, potencia: int):%0A        self.__potencia = potencia%0A        self.__time = 0%0A        self.__pessoa = None%0A%0A\n     \n@@ -1699,146 +1699,50 @@\n == '\n-init':%0A            moto.init(int(args%5B1%5D))%0A        elif args%5B0%5D == 'enter':%0A            nome = str(args%5B1%5D)%0A            idade = int\n+enter':%0A            pessoa = Pessoa\n (args%5B\n-2\n+1\n %5D)%0A \n@@ -1769,27 +1769,8 @@\n rir(\n-Pessoa(nome, idade)\n )%0A  \n@@ -1943,210 +1943,19 @@\n int(\n-pessoa)%0A        elif args%5B0%5D == 'buy':%0A            moto.buyTime(int(args%5B1%5D))%0A        elif args%5B0%5D == 'drive':%0A            moto.drive(int(args%5B1%5D))%0A        elif args%5B0%5D == 'honk':%0A            moto.honk(\n+f'%7Bpessoa%7D'\n )%0A  \n",
            "lines": "80"
        },
        {
            "label": "2025-10-26_13-09-08",
            "content": "@@ -749,26 +749,24 @@\n  aux = self.\n-__\n pessoa%0A     \n",
            "lines": "94"
        },
        {
            "label": "2025-10-26_13-11-16",
            "content": "@@ -48,19 +48,19 @@\n  idade: \n-int\n+str\n ):%0A     \n@@ -290,17 +290,16 @@\n dade%7D'%0A%0A\n-%0A\n class Mo\n@@ -508,23 +508,17 @@\n elf.\n-__\n pessoa \n-is not\n+!=\n  Non\n@@ -606,17 +606,17 @@\n essoa = \n-p\n+P\n essoa%0A%0A \n@@ -654,34 +654,34 @@\n f self.__pessoa \n-is\n+==\n  None:%0A         \n@@ -1027,26 +1027,26 @@\n lf.__pessoa \n-is\n+==\n  None:%0A     \n@@ -1131,20 +1131,18 @@\n ssoa.get\n-Idad\n+Ag\n e() %3E 10\n@@ -1311,55 +1311,8 @@\n s')%0A\n-            self.__time = 0%0A            return%0A\n     \n@@ -1374,18 +1374,15 @@\n int(\n-%22P%22 + (%22e%22\n+f'P%7B'e'\n  * s\n@@ -1399,15 +1399,11 @@\n ncia\n-) + %22m%22\n+%7Dm'\n )%0A%0A \n@@ -1560,165 +1560,31 @@\n     \n-pessoa_str = %22(empty)%22 if self.__pessoa is None else f%22(%7Bself.__pessoa%7D)%22%0A        return f%22power:%7Bself.__potencia%7D, time:%7Bself.__time%7D, person:%7Bpessoa_str%7D%22%0A\n+return str(self.pessoa)\n %0A%0Ade\n@@ -1615,28 +1615,8 @@\n o()%0A\n-    while True:%0A    \n     \n@@ -1630,20 +1630,16 @@\n input()%0A\n-    \n     prin\n@@ -1652,20 +1652,16 @@\n + line)%0A\n-    \n     args\n@@ -1674,18 +1674,37 @@\n e.split(\n-)%0A\n+' ')%0A%0A    while True:\n %0A       \n@@ -2102,18 +2102,19 @@\n  pessoa \n-is\n+== \n  None:%0A \n@@ -2312,22 +2312,20 @@\n   moto.d\n-i\n ri\n-gir\n+ve\n (int(arg\n@@ -2428,16 +2428,14 @@\n error')%0A\n-%0A%0A\n main()\n",
            "lines": "94"
        },
        {
            "label": "2025-10-26_13-12-09",
            "content": "@@ -518,10 +518,14 @@\n soa \n-!=\n+is not\n  Non\n@@ -661,34 +661,34 @@\n f self.__pessoa \n-==\n+is\n  None:%0A         \n@@ -1034,26 +1034,26 @@\n lf.__pessoa \n-==\n+is\n  None:%0A     \n@@ -2308,18 +2308,18 @@\n  pessoa \n-==\n+is\n  None:%0A \n",
            "lines": "101"
        },
        {
            "label": "2025-10-26_13-15-06",
            "content": "@@ -2300,33 +2300,33 @@\n   if pessoa \n-!\n+=\n = None:%0A\n             \n@@ -2305,32 +2305,81 @@\n pessoa == None:%0A\n+                print('empty')%0A            else:%0A\n                 \n",
            "lines": "101"
        },
        {
            "label": "2025-10-26_13-19-19",
            "content": "class Pessoa:\n    def __init__(self, nome: str, idade: int):\n        self.__nome = nome\n        self.__idade = idade\n\n    def getNome(self):\n        return self.__nome\n    \n    def getIdade(self):\n        return self.__idade\n\n    def __str__(self):\n        return f'{self.__nome}:{self.__idade}'\n\n\nclass Moto:\n    def __init__(self, potencia: int = 1):\n        self.__pessoa: Pessoa | None = None\n        self.__potencia = potencia\n        self.__time = 0\n\n    def inserir(self, pessoa: Pessoa):\n        if self.__pessoa != None:\n            print('fail: busy motorcycle')\n            return\n        self.__pessoa = pessoa\n\n    def remover(self):\n        if self.__pessoa == None:\n            print('fail: empty motorcycle')\n            return\n        aux = self.__pessoa\n        self.__pessoa = None\n        return aux\n\n    def buyTime(self, time: int):\n        self.__time += time\n        \n    def dirigir(self, time: int):\n        if self.__time == 0:\n            print('fail: buy time first')\n            return\n        if self.__pessoa == None:\n            print('fail: empty motorcycle')\n            return\n        if self.__pessoa.getIdade() > 10:\n            print('fail: too old to drive')\n            return\n        if time > self.__time:\n            print(f'fail: time finished after {self.__time} minutes')\n            self.__time = 0\n            return\n        self.__time -= time\n\n    def honk(self):\n        print(\"P\" + (\"e\" * self.__potencia) + \"m\")\n\n    def init(self, potencia: int):\n        self.__potencia = potencia\n        self.__time = 0\n        self.__pessoa = None\n\n    def __str__(self):\n        pessoa_str = \"(empty)\" if self.__pessoa is None else f\"({self.__pessoa})\"\n        return f\"power:{self.__potencia}, time:{self.__time}, person:{pessoa_str}\"\n\n\ndef main():\n    moto = Moto()\n    while True:\n        line = input()\n        print('$' + line)\n        args = line.split()\n\n        if args[0] == 'end':\n            break\n        elif args[0] == 'show':\n            print(moto)\n        elif args[0] == 'init':\n            moto.init(int(args[1]))\n        elif args[0] == 'enter':\n            nome = str(args[1])\n            idade = int(args[2])\n            moto.inserir(Pessoa(nome, idade))\n        elif args[0] == 'leave':\n            pessoa = moto.remover()\n            if pessoa != None:\n                print(pessoa)\n        elif args[0] == 'buy':\n            moto.buyTime(int(args[1]))\n        elif args[0] == 'drive':\n            moto.dirigir(int(args[1]))\n        elif args[0] == 'honk':\n            moto.honk()\n        else:\n            print('error')\n\n\nmain()",
            "lines": "99"
        }
    ]
}