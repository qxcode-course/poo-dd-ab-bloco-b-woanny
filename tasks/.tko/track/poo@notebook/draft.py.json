{
    "patches": [
        {
            "label": "2025-10-21_03-30-44",
            "content": "@@ -106,191 +106,29 @@\n ado%0A\n-        self.__bateria: Bateria %7C None = None%0A%0A    def ligar(self):%0A        if self.__bateria is None or self.__bateria.getCarga == 0:%0A            print('n%C3%A3o foi poss%C3%ADvel ligar')%0A    \n+%0A    def ligar(self):\n %0A   \n@@ -665,1131 +665,209 @@\n     \n-%0A        if self.__bateria is None:%0A            print(f'Status: %7Bstatus%7D, Bateria: Nenhuma')%0A        else:%0A            print(f'Status: %7Bstatus%7D, Bateria: (%7Bself.__bateria.getCarga%7D/%7Bself.__bateria.getCapacidade%7D)')%0A%0A    def usar(self, tempo):%0A        if not self.__ligado:%0A            print('erro: ligue o notebook primeiro')%0A        else:%0A            print(f'Usando por %7Btempo%7D minutos')%0A%0A    def setBateria(self, bateria):%0A        self.__bateria = bateria%0A%0Aclass Bateria:%0A    def __init__(self, capacidade):%0A        self.__capacidade: int = capacidade%0A        self.__carga: int = capacidade # iniciar a carga com a capacidade%0A%0A    def mostrar(self):%0A        print(f'(%7Bself.__carga%7D/%7Bself.__capacidade%7D)')%0A%0A    def getCarga(self):%0A        return self.__carga%0A    %0A    def getCapacidade(self):%0A        return self.__capacidade%0A%0A    def consumir(self, tempo):%0A        if tempo %3E self.__carga: #caso tentar usar mais tempo do que carga%0A            tempo_usado = self.__carga%0A            self.__carga = 0 #descarregou%0A        else:%0A            self.__carga -= tempo # diminui o tempo na carga%0A            return tempo%0A        \n+print(f'Status: %7Bstatus%7D')%0A%0A    def usar(self, tempo):%0A        if not self.__ligado:%0A            print('erro: ligue o notebook primeiro')%0A        else:%0A            print(f'Usando por %7Btempo%7D minutos')%0A\n %0Anot\n@@ -908,28 +908,8 @@\n ook%0A\n-bateria = Bateria()%0A\n note\n@@ -950,34 +950,16 @@\n esligado\n-, Bateria: Nenhuma\n %0Anoteboo\n@@ -1046,268 +1046,22 @@\n g: n\n-%C3%A3o foi poss%C3%ADvel ligar%0Anotebook.mostrar()    # msg: Status: Desligado, Bateria: Nenhuma%0Abateria = Bateria(50) # criando bateria que suporta 50 minutos e come%C3%A7a carregada%0Abateria.mostrar()     # (50/50)%0Anotebook.setBateria(bateria) # coloca a bateria no n\n otebook\n+ ligado\n %0Anot\n@@ -1098,35 +1098,14 @@\n us: \n-Desl\n+L\n igado\n-, Bateria: (50/50)\n %0Anot\n@@ -1133,163 +1133,8 @@\n msg:\n- notebook desligado%0Anotebook.ligar()      # msg: notebook ligado%0Anotebook.mostrar()    # msg: Status: Ligado, Bateria: (50/50)%0Anotebook.usar(30)     # msb:\n  Usa\n@@ -1141,17 +1141,17 @@\n ndo por \n-3\n+1\n 0 minuto\n@@ -1165,153 +1165,18 @@\n ook.\n-mostrar()    # msg: Status: Ligado, Bateria: (20/50)%0Anotebook.usar(30)     # msb: Usando por 20 minutos, notebook descarregou%0Anotebook.mostr\n+deslig\n ar()\n- \n    #\n@@ -1185,176 +1185,22 @@\n sg: \n-Status: Desligado, Bateria: (0/50)%0Anotebook.ligar()      # msg: n%C3%A3o foi poss%C3%ADvel ligar%0Abateria = notebook.rmBateria() # msg: bateria removida%0Abateria.mostrar()     # (0/50)\n+notebook desligado\n",
            "lines": "35"
        },
        {
            "label": "2025-10-22_23-44-16",
            "content": "@@ -1980,32 +1980,52 @@\n riando notebook%0A\n+bateria = Bateria()%0A\n notebook.mostrar\n",
            "lines": "81"
        },
        {
            "label": "2025-10-22_23-45-50",
            "content": "@@ -281,24 +281,29 @@\n ligar')%0A\n+    %0A\n         \n elif not\n@@ -294,18 +294,16 @@\n         \n-el\n if not s\n@@ -1002,18 +1002,16 @@\n getCarga\n-()\n %7D/%7Bself.\n@@ -1033,18 +1033,16 @@\n pacidade\n-()\n %7D)')%0A%0A  \n@@ -1221,533 +1221,63 @@\n     \n-    tempo_usado = self.__bateria.consumir(tempo)%0A        if self.__bateria.getCarga() == 0:%0A            self.desligar()%0A        else:%0A            print(f'Usando por %7Btempo_usado%7D minutos')%0A%0A    def setBateria(self, bateria):%0A        self.__bateria = bateria%0A%0A    def rmBateria(self):%0A        if self.__bateria is None:%0A            print('j%C3%A1 est%C3%A1 sem bateria')%0A            return None%0A        else:%0A            print('bateria removida')%0A            bateria = self.__bateria%0A            self.__bateria = None%0A            return\n+def setBateria(self, bateria):%0A        self.__bateria =\n  bat\n@@ -1842,39 +1842,8 @@\n gou%0A\n-            return tempo_usado%0A\n     \n",
            "lines": "80"
        },
        {
            "label": "2025-10-23_00-14-24",
            "content": "@@ -222,34 +222,32 @@\n bateria.getCarga\n-()\n  == 0:%0A         \n@@ -289,25 +289,18 @@\n         \n-%0A        \n+el\n if not s\n@@ -1162,123 +1162,62 @@\n     \n-    return%0A        %0A        if self.bateria is None:%0A            print('n%C3%A3o foi poss%C3%ADvel ligar')%0A            return\n+else:%0A            print(f'Usando por %7Btempo%7D minutos')\n %0A%0A  \n@@ -1267,25 +1267,24 @@\n (tempo)%0A\n-%0A\n         \n tempo_us\n@@ -1271,37 +1271,26 @@\n po)%0A        \n-tempo_usado =\n+if\n  self.__bate\n@@ -1297,145 +1297,120 @@\n ria.\n-consumir(tempo)%0A        print(f'Usando por %7Btempo_usado%7D minutos')%0A%0A        if self.__bateria.getCarga() == 0:%0A            self.desligar(\n+getCarga() == 0:%0A            self.desligar()%0A        else:%0A            print(f'Usando por %7Btempo_usado%7D minutos'\n )%0A%0A \n",
            "lines": "96"
        },
        {
            "label": "2025-10-23_00-28-37",
            "content": "@@ -151,60 +151,8 @@\n None\n-%0A        self.__carregador: Carregador %7C None = None\n %0A%0A  \n@@ -296,91 +296,8 @@\n    %0A\n-        if self.__carregador is None:%0A            print('n%C3%A3o foi poss%C3%ADvel ligar')%0A%0A\n     \n@@ -1155,24 +1155,43 @@\n  primeiro')%0A\n+            return%0A\n         %0A   \n@@ -1195,34 +1195,32 @@\n         if self.\n-__\n bateria is None:\n@@ -1263,16 +1263,35 @@\n  ligar')\n+%0A            return\n %0A%0A      \n@@ -1338,16 +1338,69 @@\n tempo)%0A%0A\n+        tempo_usado = self.__bateria.consumir(tempo)%0A\n         \n@@ -1864,68 +1864,8 @@\n ia%0A%0A\n-    def setCarregador(self):%0A%0A    def rmCarregador(self):%0A%0A%0A\n clas\n@@ -2551,105 +2551,1078 @@\n mpo%0A\n-%0Aclass Carregador:%0A    def __init__(self, potencia):%0A        self.__potencia: int = potencia%0A        \n+        %0Anotebook = Notebook() # criando notebook%0Anotebook.mostrar()    # msg: Status: Desligado, Bateria: Nenhuma%0Anotebook.usar(10)     # msg: erro: ligue o notebook primeiro%0Anotebook.ligar()      # msg: n%C3%A3o foi poss%C3%ADvel ligar%0Anotebook.mostrar()    # msg: Status: Desligado, Bateria: Nenhuma%0Abateria = Bateria(50) # criando bateria que suporta 50 minutos e come%C3%A7a carregada%0Abateria.mostrar()     # (50/50)%0Anotebook.setBateria(bateria) # coloca a bateria no notebook%0Anotebook.mostrar()    # msg: Status: Desligado, Bateria: (50/50)%0Anotebook.usar(10)     # msg: notebook desligado%0Anotebook.ligar()      # msg: notebook ligado%0Anotebook.mostrar()    # msg: Status: Ligado, Bateria: (50/50)%0Anotebook.usar(30)     # msb: Usando por 30 minutos%0Anotebook.mostrar()    # msg: Status: Ligado, Bateria: (20/50)%0Anotebook.usar(30)     # msb: Usando por 20 minutos, notebook descarregou%0Anotebook.mostrar()    # msg: Status: Desligado, Bateria: (0/50)%0Anotebook.ligar()      # msg: n%C3%A3o foi poss%C3%ADvel ligar%0Abateria = notebook.rmBateria() # msg: bateria removida%0Abateria.mostrar()     # (0/50)\n",
            "lines": "102"
        },
        {
            "label": "2025-10-23_11-49-30",
            "content": "@@ -201,37 +201,35 @@\n = None%0A%0A    def \n-mostr\n+lig\n ar(self):%0A      \n@@ -234,205 +234,67 @@\n     \n-status = 'Ligado' if self.__ligado else 'Desligado'%0A        %0A        # if self.__bateria is None:%0A        #     print(f'Status: %7Bstatus%7D, Bateria: Nenhuma, Carregador: Desconhecido')%0A        # else\n+if self.__bateria is None or self.__bateria.getCarga() == 0\n :%0A  \n@@ -303,123 +303,52 @@\n     \n-#\n     \n- \n print(\n-f'Status: %7Bstatus%7D, Bateria: (%7Bself.__bateria.getCarga()%7D/%7Bself.__bateria.getCapacidade()%7D)\n+'n%C3%A3o foi poss%C3%ADvel ligar\n ')%0A\n-%0A\n         \n bate\n@@ -347,365 +347,91 @@\n     \n-bateria_str = 'Nenhuma' if self.__bateria is None else f'(%7Bself.__bateria.getCarga()%7D/%7Bself.__bateria.getCapacidade()%7D)'%0A        carregador_str = 'Desconhecido' if self.__carregador is None else f'(Pot%C3%AAncia %7Bself.__carregador.getPotencia()%7D)'%0A        print(f'Status: %7Bstatus%7D, Bateria: %7Bbateria_str%7D, Carregador: %7Bcarregador_str%7D')%0A    %0A    def ligar(self):\n+%0A        if self.__carregador is None:%0A            print('n%C3%A3o foi poss%C3%ADvel ligar')%0A\n %0A   \n@@ -430,32 +430,36 @@\n r')%0A%0A        if \n+not \n self.__ligado:%0A \n@@ -460,222 +460,62 @@\n ado:\n-%0A            print('notebook j%C3%A1 est%C3%A1 ligado')        %0A        %0A        if self.__bateria is None or self.__bateria.getCarga() == 0 or self.__carregador is None:%0A            print('motebook desligado')%0A        else:\n+ # se n%C3%A3o for falso %C3%A9 verdadeiro e verdadeiro %C3%A9 ligado\n %0A   \n@@ -567,17 +567,17 @@\n nt('note\n-n\n+b\n ook liga\n@@ -581,25 +581,24 @@\n igado')%0A\n-%0A\n         \n # if sel\n@@ -593,69 +593,12 @@\n     \n-# if self.__bateria is None or self.__bateria.getCarga() == 0\n+else\n :%0A  \n@@ -594,34 +594,32 @@\n    else:%0A       \n- #\n      print('n%C3%A3o \n@@ -619,135 +619,65 @@\n t('n\n-%C3%A3o foi poss%C3%ADvel\n+otebook j%C3%A1 est%C3%A1\n  liga\n-r')%0A        %0A        # if self.__carregador is None:%0A        #     print('n%C3%A3o foi poss%C3%ADvel ligar')%0A\n+do')%0A%0A    def desligar(self):\n %0A       \n  # i\n@@ -676,18 +676,12 @@\n     \n- #\n  if \n-not \n self\n@@ -688,36 +688,32 @@\n .__ligado: # se \n-n%C3%A3o \n for falso %C3%A9 verd\n@@ -712,34 +712,27 @@\n o %C3%A9 \n-verdadeiro e verdadeir\n+falso e fals\n o %C3%A9 \n+des\n liga\n@@ -737,26 +737,24 @@\n gado%0A       \n- #\n      self.__\n@@ -754,35 +754,36 @@\n self.__ligado = \n-Tru\n+Fals\n e%0A        #     \n@@ -772,35 +772,34 @@\n lse%0A        \n-#\n     \n- \n print\n+ \n ('notebook l\n@@ -789,32 +789,35 @@\n rint ('notebook \n+des\n ligado')%0A       \n@@ -816,18 +816,16 @@\n %0A       \n- #\n  else:%0A \n@@ -830,18 +830,16 @@\n %0A       \n- #\n      pri\n@@ -832,32 +832,33 @@\n            print\n+ \n ('notebook j%C3%A1 es\n@@ -852,32 +852,35 @@\n otebook j%C3%A1 est%C3%A1 \n+des\n ligado')%0A%0A    de\n@@ -873,38 +873,37 @@\n gado')%0A%0A    def \n-deslig\n+mostr\n ar(self):%0A      \n@@ -908,68 +908,58 @@\n     \n-if self.__ligado: # se for falso %C3%A9 falso e falso %C3%A9 d\n+status = 'Ligado' if self.__ligado else 'D\n esligado\n %0A   \n@@ -946,32 +946,33 @@\n  else 'Desligado\n+'\n %0A            sel\n@@ -968,135 +968,224 @@\n     \n+%0A\n     \n-self.__ligado = False%0A            print ('notebook desligado')%0A        else:%0A            print ('notebook j%C3%A1 est%C3%A1 desligado\n+    if self.__bateria is None:%0A            print(f'Status: %7Bstatus%7D, Bateria: Nenhuma')%0A        else:%0A            print(f'Status: %7Bstatus%7D, Bateria: (%7Bself.__bateria.getCarga()%7D/%7Bself.__bateria.getCapacidade()%7D)\n ')%0A%0A\n@@ -1336,37 +1336,8 @@\n  is \n-None or self.__carregador is \n None\n@@ -1936,361 +1936,40 @@\n self\n-, carregador):%0A        self.__carregador = carregador%0A%0A    def rmCarregador(self):%0A        if self.__carregador is None:%0A            print('j%C3%A1 est%C3%A1 sem carregador')%0A            return None%0A        else:%0A            print('carregador removido')%0A            carregador = self.__carregador%0A            self.__carregador = None%0A            return carregador\n+):%0A%0A    def rmCarregador(self):%0A\n %0A%0Acl\n@@ -2749,136 +2749,8 @@\n ncia\n-%0A%0A    def mostrar(self):%0A        print(f'Pot%C3%AAncia %7Bself.__potencia%7D')%0A%0A    def getPotencia(self):%0A        return self.__potencia\n %0A   \n",
            "lines": "93"
        },
        {
            "label": "2025-10-23_12-28-46",
            "content": "@@ -1059,32 +1059,61 @@\n .getCarga() == 0\n+ or self.__carregador is None\n :%0A            pr\n@@ -1117,38 +1117,34 @@\n  print('\n-n%C3%A3o foi poss%C3%ADvel \n+motebook des\n liga\n-r\n+do\n ')%0A     \n@@ -2010,26 +2010,124 @@\n         \n+%0A\n     \n-return\n+    if self.__bateria is None or self.__carregador is None:%0A            print('n%C3%A3o foi poss%C3%ADvel ligar')\n %0A%0A      \n@@ -3936,300 +3936,12 @@\n cia%0A\n-%0Anotebook = Notebook() # criando notebook%0A%0Abateria = Bateria(50) # criando bateria que suporta 50 minutos e come%C3%A7a carregada%0A%0Abateria = notebook.rmBateria() # msg: bateria removida%0Abateria.mostrar()  # (0/50)%0Anotebook.mostrar() # msg: Status: Desligado, Bateria: Nenhuma, Carregador: Desconectado\n+        \n",
            "lines": "120"
        },
        {
            "label": "2025-10-23_12-46-59",
            "content": "@@ -2425,71 +2425,8 @@\n a')%0A\n-            self.__bateria.consumir(self.__bateria.getCarga())%0A\n     \n@@ -3939,38 +3939,8 @@\n da%0A%0A\n-notebook.setBateria(bateria) %0A\n bate\n",
            "lines": "125"
        },
        {
            "label": "2025-10-23_13-01-09",
            "content": "@@ -285,32 +285,285 @@\n igado'%0A        %0A\n+        # if self.__bateria is None:%0A        #     print(f'Status: %7Bstatus%7D, Bateria: Nenhuma, Carregador: Desconhecido')%0A        # else:%0A        #     print(f'Status: %7Bstatus%7D, Bateria: (%7Bself.__bateria.getCarga()%7D/%7Bself.__bateria.getCapacidade()%7D)')%0A%0A\n         bateria_\n@@ -592,26 +592,26 @@\n f.__bateria \n-==\n+is\n  None else f\n@@ -732,26 +732,26 @@\n _carregador \n-==\n+is\n  None else f\n@@ -974,32 +974,40 @@\n j%C3%A1 est%C3%A1 ligado')\n+        \n %0A            ret\n@@ -995,34 +995,221 @@\n    %0A        \n+%0A  \n     \n-return\n+  if self.__bateria is None or self.__bateria.getCarga() == 0:%0A            print('n%C3%A3o foi poss%C3%ADvel ligar')%0A        else:%0A            self.__ligado = True%0A            print('notenook ligado')\n %0A%0A        if\n@@ -1209,13 +1209,14 @@\n     \n+ #\n  if \n-(\n self\n@@ -1222,26 +1222,26 @@\n f.__bateria \n-==\n+is\n  None or sel\n@@ -1271,13 +1271,77 @@\n == 0\n-) and\n+:%0A        #     print('n%C3%A3o foi poss%C3%ADvel ligar')%0A        %0A        # if\n  sel\n@@ -1347,34 +1347,34 @@\n lf.__carregador \n-==\n+is\n  None:%0A         \n@@ -1363,32 +1363,34 @@\n is None:%0A       \n+ #\n      print('n%C3%A3o \n@@ -1406,32 +1406,33 @@\n vel ligar')%0A\n+%0A\n         \n     return%0A%0A\n@@ -1415,39 +1415,111 @@\n ')%0A%0A        \n-    return%0A%0A   \n+# if not self.__ligado: # se n%C3%A3o for falso %C3%A9 verdadeiro e verdadeiro %C3%A9 ligado%0A        #\n      self.__\n@@ -1531,24 +1531,30 @@\n o = True%0A   \n+     #\n      print('\n@@ -1562,32 +1562,95 @@\n otebook ligado')\n+%0A        # else:%0A        #     print('notebook j%C3%A1 est%C3%A1 ligado')\n %0A%0A    def deslig\n@@ -1898,122 +1898,8 @@\n o):%0A\n-        if self.__carregador != None and self.__bateria != None:%0A            return self.__carregador.carregar()%0A%0A\n     \n@@ -2295,18 +2295,18 @@\n bateria \n-==\n+is\n  None:%0A \n@@ -2721,18 +2721,18 @@\n regador \n-==\n+is\n  None:%0A \n@@ -3747,54 +3747,8 @@\n ncia\n-%0A        self.__bateria: Bateria %7C None = None\n %0A%0A  \n@@ -3877,2028 +3877,329 @@\n ia%0A%0A\n-    def carregar(self, tempo):%0A        if self.__bateria != None:%0A            carga_nova = self.__bateria.getCarga() + tempo * self.__potencia%0A%0A        if carga_nova %3E self.__bateria.getCapacidade():%0A            carga_nova = self.__bateria.getCapacidade()%0A        %0A        return carga_nova%0A%0A%0Anotebook = Notebook() # criando notebook%0Anotebook.mostrar()    # msg: Status: Desligado, Bateria: Nenhuma, Carregador: Desconectado%0Anotebook.ligar()      # msg: n%C3%A3o foi poss%C3%ADvel ligar%0Anotebook.usar(10)     # msg: notebook desligado%0A%0Abateria = Bateria(50) # criando bateria que suporta 50 minutos e come%C3%A7a carregada%0Abateria.mostrar()     # (50/50)%0Anotebook.setBateria(bateria) # coloca a bateria no notebook%0A%0Anotebook.mostrar() # msg: Status: Desligado, Bateria: (50/50), Carregador: Desconectado%0Anotebook.ligar()   # msg: notebook ligado%0Anotebook.mostrar() # msg: Status: Ligado, Bateria: (50/50), Carregador: Desconectado%0Anotebook.usar(30)  # msb: Usando por 30 minutos%0Anotebook.mostrar() # msg: Status: Ligado, Bateria: (20/50), Carregador: Desconectado%0Anotebook.usar(30)  # msb: Usando por 20 minutos, notebook descarregou%0Anotebook.mostrar() # msg: Status: Desligado, Bateria: (0/50), Carregador: Desconectado%0A%0Abateria = notebook.rmBateria() # msg: bateria removida%0Abateria.mostrar()  # (0/50)%0Anotebook.mostrar() # msg: Status: Desligado, Bateria: Nenhuma, Carregador: Desconectado%0A%0Acarregador = Carregador(2) # criando carregador com 2 de potencia%0Acarregador.mostrar() # (Pot%C3%AAncia 2)%0A%0Anotebook.setCarregador(carregador) # adicionando carregador no notebook%0Anotebook.mostrar() # msg: Status: Desligado, Bateria: Nenhuma, Carregador: (Pot%C3%AAncia 2)%0Anotebook.ligar()   # msg: notebook ligado%0Anotebook.mostrar() # msg: Status: Ligado, Bateria: Nenhuma, Carregador: (Pot%C3%AAncia 2)%0A%0Anotebook.setBateria(bateria)%0Anotebook.mostrar() # msg: Status: Ligado, Bateria: (0/50), Carregador: (Pot%C3%AAncia 2)%0Anotebook.usar(10)  # msg: Notebook utilizado com sucesso%0Anotebook.mostrar() # msg: Status: Ligado, Bateria: (20/50), Carregador: (Pot%C3%AAncia 2)\n+notebook = Notebook() # criando notebook%0A%0Abateria = Bateria(50) # criando bateria que suporta 50 minutos e come%C3%A7a carregada%0A%0Anotebook.setBateria(bateria) %0Abateria = notebook.rmBateria() # msg: bateria removida%0Abateria.mostrar()  # (0/50)%0Anotebook.mostrar() # msg: Status: Desligado, Bateria: Nenhuma, Carregador: Desconectado\n",
            "lines": "127"
        },
        {
            "label": "2025-10-26_12-14-21",
            "content": "class Notebook:\n    def __init__(self):\n        self.__ligado: bool = False #True = Ligado False = Desligado\n        self.__bateria: Bateria | None = None\n        self.__carregador: Carregador | None = None\n\n    def mostrar(self):\n        status = 'Ligado' if self.__ligado else 'Desligado'\n        \n        bateria_str = 'Nenhuma' if self.__bateria == None else f'({self.__bateria.getCarga()}/{self.__bateria.getCapacidade()})'\n        carregador_str = 'Desconhecido' if self.__carregador == None else f'(Pot\u00eancia {self.__carregador.getPotencia()})'\n        print(f'Status: {status}, Bateria: {bateria_str}, Carregador: {carregador_str}')\n    \n    def ligar(self):\n        if self.__ligado:\n            print('notebook j\u00e1 est\u00e1 ligado')\n            return\n\n        if (self.__bateria == None or self.__bateria.getCarga() == 0) and self.__carregador == None:\n            print('n\u00e3o foi poss\u00edvel ligar')\n            return\n\n        self.__ligado = True\n        print('notebook ligado')\n\n    def desligar(self):\n        if self.__ligado: # se for falso \u00e9 falso e falso \u00e9 desligado\n            self.__ligado = False\n            print ('notebook desligado')\n        else:\n            print ('notebook j\u00e1 est\u00e1 desligado')\n\n    def usar(self, tempo):\n        if self.__carregador != None and self.__bateria != None:\n            return self.__carregador.carregar()\n\n        if not self.__ligado:\n            print('erro: ligue o notebook primeiro')\n            return\n\n        tempo_usado = self.__bateria.consumir(tempo)\n\n        print(f'Usando por {tempo_usado} minutos')\n\n        if self.__bateria.getCarga() == 0:\n            self.desligar()\n\n    def setBateria(self, bateria):\n        self.__bateria = bateria\n\n    def rmBateria(self):\n        if self.__bateria == None:\n            print('j\u00e1 est\u00e1 sem bateria')\n            return None\n        else:\n            print('bateria removida')\n            self.__bateria.consumir(self.__bateria.getCarga())\n            bateria = self.__bateria\n            self.__bateria = None\n            return bateria\n\n    def setCarregador(self, carregador):\n        self.__carregador = carregador\n\n    def rmCarregador(self):\n        if self.__carregador == None:\n            print('j\u00e1 est\u00e1 sem carregador')\n            return None\n        else:\n            print('carregador removido')\n            carregador = self.__carregador\n            self.__carregador = None\n            return carregador\n\nclass Bateria:\n    def __init__(self, capacidade):\n        self.__capacidade: int = capacidade\n        self.__carga: int = capacidade # iniciar a carga com a capacidade\n\n    def mostrar(self):\n        print(f'({self.__carga}/{self.__capacidade})')\n\n    def getCarga(self):\n        return self.__carga\n    \n    def getCapacidade(self):\n        return self.__capacidade\n\n    def consumir(self, tempo):\n        if tempo > self.__carga: #caso tentar usar mais tempo do que carga\n            tempo_usado = self.__carga\n            self.__carga = 0 #descarregou\n            return tempo_usado\n        else:\n            self.__carga -= tempo # diminui o tempo na carga\n            return tempo\n\nclass Carregador:\n    def __init__(self, potencia):\n        self.__potencia: int = potencia\n        self.__bateria: Bateria | None = None\n\n    def mostrar(self):\n        print(f'Pot\u00eancia {self.__potencia}')\n\n    def getPotencia(self):\n        return self.__potencia\n\n    def carregar(self, tempo):\n        if self.__bateria != None:\n            carga_nova = self.__bateria.getCarga() + tempo * self.__potencia\n\n        if carga_nova > self.__bateria.getCapacidade():\n            carga_nova = self.__bateria.getCapacidade()\n        \n        return carga_nova\n\n\nnotebook = Notebook() # criando notebook\nnotebook.mostrar()    # msg: Status: Desligado, Bateria: Nenhuma, Carregador: Desconectado\nnotebook.ligar()      # msg: n\u00e3o foi poss\u00edvel ligar\nnotebook.usar(10)     # msg: notebook desligado\n\nbateria = Bateria(50) # criando bateria que suporta 50 minutos e come\u00e7a carregada\nbateria.mostrar()     # (50/50)\nnotebook.setBateria(bateria) # coloca a bateria no notebook\n\nnotebook.mostrar() # msg: Status: Desligado, Bateria: (50/50), Carregador: Desconectado\nnotebook.ligar()   # msg: notebook ligado\nnotebook.mostrar() # msg: Status: Ligado, Bateria: (50/50), Carregador: Desconectado\nnotebook.usar(30)  # msb: Usando por 30 minutos\nnotebook.mostrar() # msg: Status: Ligado, Bateria: (20/50), Carregador: Desconectado\nnotebook.usar(30)  # msb: Usando por 20 minutos, notebook descarregou\nnotebook.mostrar() # msg: Status: Desligado, Bateria: (0/50), Carregador: Desconectado\n\nbateria = notebook.rmBateria() # msg: bateria removida\nbateria.mostrar()  # (0/50)\nnotebook.mostrar() # msg: Status: Desligado, Bateria: Nenhuma, Carregador: Desconectado\n\ncarregador = Carregador(2) # criando carregador com 2 de potencia\ncarregador.mostrar() # (Pot\u00eancia 2)\n\nnotebook.setCarregador(carregador) # adicionando carregador no notebook\nnotebook.mostrar() # msg: Status: Desligado, Bateria: Nenhuma, Carregador: (Pot\u00eancia 2)\nnotebook.ligar()   # msg: notebook ligado\nnotebook.mostrar() # msg: Status: Ligado, Bateria: Nenhuma, Carregador: (Pot\u00eancia 2)\n\nnotebook.setBateria(bateria)\nnotebook.mostrar() # msg: Status: Ligado, Bateria: (0/50), Carregador: (Pot\u00eancia 2)\nnotebook.usar(10)  # msg: Notebook utilizado com sucesso\nnotebook.mostrar() # msg: Status: Ligado, Bateria: (20/50), Carregador: (Pot\u00eancia 2)",
            "lines": "151"
        }
    ]
}